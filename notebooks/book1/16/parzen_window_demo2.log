An error occurred while executing the following cell:
------------------
# Demonstrate a non-parametric (parzen) density estimator in 1D

# Author: Gerardo Durán Martín


import numpy as np
import matplotlib.pyplot as plt
from scipy.linalg import norm

plt.rcParams["axes.spines.right"] = False
plt.rcParams["axes.spines.top"] = False


def K(u, axis=0):
    return np.all(np.abs(u) <= 1 / 2, axis=axis)


def p1(x, X, h):
    """
    KDE under a unit hypercube
    """
    N, D = X.shape
    xden, _ = x.shape

    u = ((x - X.T) / h).reshape(D, xden, N)
    ku = K(u).sum(axis=1) / (N * h**D)
    return ku


def kdeg(x, X, h, return_components=False):
    """
    KDE under a gaussian kernel
    """
    N, D = X.shape
    nden, _ = x.shape

    Xhat = X.reshape(D, 1, N)
    xhat = x.reshape(D, nden, 1)
    u = xhat - Xhat
    u = norm(u, ord=2, axis=0) ** 2 / (2 * h**2)  # (N, nden)
    px = np.exp(-u)
    if not return_components:
        px = px.sum(axis=1)

    px = px / (N * h * np.sqrt(2 * np.pi))
    return px


def main():
    data = np.array([-2.1, -1.3, -0.4, 1.9, 5.1, 6.2])[:, None]
    yvals = np.zeros_like(data)
    xv = np.linspace(-5, 10, 100)[:, None]

    fig, ax = plt.subplots(2, 2)
    # Uniform h=1
    ax[0, 0].scatter(data, yvals, marker="x", c="tab:gray")
    ax[0, 0].step(xv, p1(xv, data, 1), c="tab:blue", alpha=0.7)
    ax[0, 0].set_title("unif, h=1.0")
    # Uniform h=2
    ax[0, 1].scatter(data, yvals, marker="x", c="tab:gray")
    ax[0, 1].step(xv, p1(xv, data, 2), c="tab:blue", alpha=0.7)
    ax[0, 1].set_title("unif, h=2.0")

    # Gaussian h=1
    ax[1, 0].scatter(data, yvals, marker="x", c="tab:gray", zorder=3)
    ax[1, 0].plot(xv, kdeg(xv, data, 1), c="tab:blue", alpha=0.7, zorder=2)
    ax[1, 0].plot(xv, kdeg(xv, data, 1, True), c="tab:red", alpha=0.7, linestyle="--", zorder=1, linewidth=1)
    ax[1, 0].set_title("gauss, h=1.0")
    # Gaussian h=2
    ax[1, 1].scatter(data, yvals, marker="x", c="tab:gray", zorder=3)
    ax[1, 1].plot(xv, kdeg(xv, data, 2), c="tab:blue", alpha=0.7, zorder=2)
    ax[1, 1].plot(xv, kdeg(xv, data, 2, True), c="tab:red", alpha=0.7, linestyle="--", zorder=1, linewidth=1)
    ax[1, 1].set_title("gauss, h=2.0")

    plt.tight_layout()
    plt.savefig("figures/parzen_window2.pdf", dpi=300)
    plt.show()


if __name__ == "__main__":
    main()
------------------

---------------------------------------------------------------------------
FileNotFoundError                         Traceback (most recent call last)
/tmp/ipykernel_2266/255735360.py in <module>
     79 
     80 if __name__ == "__main__":
---> 81     main()

/tmp/ipykernel_2266/255735360.py in main()
     74 
     75     plt.tight_layout()
---> 76     plt.savefig("figures/parzen_window2.pdf", dpi=300)
     77     plt.show()
     78 

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/pyplot.py in savefig(*args, **kwargs)
    977 def savefig(*args, **kwargs):
    978     fig = gcf()
--> 979     res = fig.savefig(*args, **kwargs)
    980     fig.canvas.draw_idle()   # need this if 'transparent=True' to reset colors
    981     return res

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/figure.py in savefig(self, fname, transparent, **kwargs)
   3044                         ax.patch._cm_set(facecolor='none', edgecolor='none'))
   3045 
-> 3046             self.canvas.print_figure(fname, **kwargs)
   3047 
   3048     def ginput(self, n=1, timeout=30, show_clicks=True,

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/backend_bases.py in print_figure(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs)
   2323                         orientation=orientation,
   2324                         bbox_inches_restore=_bbox_inches_restore,
-> 2325                         **kwargs)
   2326             finally:
   2327                 if bbox_inches and restore_bbox:

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/backend_bases.py in wrapper(*args, **kwargs)
   1646             kwargs.pop(arg)
   1647 
-> 1648         return func(*args, **kwargs)
   1649 
   1650     return wrapper

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/_api/deprecation.py in wrapper(*inner_args, **inner_kwargs)
    387             # Early return in the simple, non-deprecated case (much faster than
    388             # calling bind()).
--> 389             return func(*inner_args, **inner_kwargs)
    390         arguments = signature.bind(*inner_args, **inner_kwargs).arguments
    391         if is_varargs and arguments.get(name):

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/backends/backend_pdf.py in print_pdf(self, filename, dpi, bbox_inches_restore, metadata)
   2781             file = filename._file
   2782         else:
-> 2783             file = PdfFile(filename, metadata=metadata)
   2784         try:
   2785             file.newPage(width, height)

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/backends/backend_pdf.py in __init__(self, filename, metadata)
    652         self.original_file_like = None
    653         self.tell_base = 0
--> 654         fh, opened = cbook.to_filehandle(filename, "wb", return_opened=True)
    655         if not opened:
    656             try:

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/cbook/__init__.py in to_filehandle(fname, flag, return_opened, encoding)
    449             fh = bz2.BZ2File(fname, flag)
    450         else:
--> 451             fh = open(fname, flag, encoding=encoding)
    452         opened = True
    453     elif hasattr(fname, 'seek'):

FileNotFoundError: [Errno 2] No such file or directory: 'figures/parzen_window2.pdf'
FileNotFoundError: [Errno 2] No such file or directory: 'figures/parzen_window2.pdf'
