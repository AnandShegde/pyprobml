An error occurred while executing the following cell:
------------------
# Based on
# https://github.com/tensorflow/docs/blob/master/site/en/r1/tutorials/keras/basic_classification.ipynb
# (MIT License)


from __future__ import absolute_import, division, print_function


try:
    from tensorflow import keras
except ModuleNotFoundError:
    %pip install tensorflow
    from tensorflow import keras
import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt
import os

figdir = "figures"


def savefig(fname):
    plt.savefig(os.path.join(figdir, fname))


np.random.seed(0)


data = keras.datasets.cifar10

(train_images, train_labels), (test_images, test_labels) = data.load_data()

# print(np.shape(train_images))
# print(np.shape(test_images))


# For CIFAR:
# (50000, 32, 32, 3)
# (10000, 32, 32, 3)

class_names = ["plane", "car", "bird", "cat", "deer", "dog", "frog", "horse", "ship", "truck"]

plt.figure(figsize=(10, 10))
for i in range(25):
    plt.subplot(5, 5, i + 1)
    plt.xticks([])
    plt.yticks([])
    plt.grid(False)
    plt.imshow(train_images[i])
    y = train_labels[i][0]
    plt.xlabel(class_names[y])
savefig("cifar10-data.pdf")
plt.show()
------------------

---------------------------------------------------------------------------
FileNotFoundError                         Traceback (most recent call last)
/tmp/ipykernel_2778/3913712510.py in <module>
     50     y = train_labels[i][0]
     51     plt.xlabel(class_names[y])
---> 52 savefig("cifar10-data.pdf")
     53 plt.show()

/tmp/ipykernel_2778/3913712510.py in savefig(fname)
     21 
     22 def savefig(fname):
---> 23     plt.savefig(os.path.join(figdir, fname))
     24 
     25 

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/pyplot.py in savefig(*args, **kwargs)
    977 def savefig(*args, **kwargs):
    978     fig = gcf()
--> 979     res = fig.savefig(*args, **kwargs)
    980     fig.canvas.draw_idle()   # need this if 'transparent=True' to reset colors
    981     return res

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/figure.py in savefig(self, fname, transparent, **kwargs)
   3044                         ax.patch._cm_set(facecolor='none', edgecolor='none'))
   3045 
-> 3046             self.canvas.print_figure(fname, **kwargs)
   3047 
   3048     def ginput(self, n=1, timeout=30, show_clicks=True,

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/backend_bases.py in print_figure(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs)
   2323                         orientation=orientation,
   2324                         bbox_inches_restore=_bbox_inches_restore,
-> 2325                         **kwargs)
   2326             finally:
   2327                 if bbox_inches and restore_bbox:

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/backend_bases.py in wrapper(*args, **kwargs)
   1646             kwargs.pop(arg)
   1647 
-> 1648         return func(*args, **kwargs)
   1649 
   1650     return wrapper

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/_api/deprecation.py in wrapper(*inner_args, **inner_kwargs)
    387             # Early return in the simple, non-deprecated case (much faster than
    388             # calling bind()).
--> 389             return func(*inner_args, **inner_kwargs)
    390         arguments = signature.bind(*inner_args, **inner_kwargs).arguments
    391         if is_varargs and arguments.get(name):

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/backends/backend_pdf.py in print_pdf(self, filename, dpi, bbox_inches_restore, metadata)
   2781             file = filename._file
   2782         else:
-> 2783             file = PdfFile(filename, metadata=metadata)
   2784         try:
   2785             file.newPage(width, height)

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/backends/backend_pdf.py in __init__(self, filename, metadata)
    652         self.original_file_like = None
    653         self.tell_base = 0
--> 654         fh, opened = cbook.to_filehandle(filename, "wb", return_opened=True)
    655         if not opened:
    656             try:

~/miniconda3/envs/py37/lib/python3.7/site-packages/matplotlib/cbook/__init__.py in to_filehandle(fname, flag, return_opened, encoding)
    449             fh = bz2.BZ2File(fname, flag)
    450         else:
--> 451             fh = open(fname, flag, encoding=encoding)
    452         opened = True
    453     elif hasattr(fname, 'seek'):

FileNotFoundError: [Errno 2] No such file or directory: 'figures/cifar10-data.pdf'
FileNotFoundError: [Errno 2] No such file or directory: 'figures/cifar10-data.pdf'
